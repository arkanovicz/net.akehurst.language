grammar Test {
  skip WS : "\s+"  ; 
  block : '{' decls '}' ;
  decls : decl* ;
  decl : type name ';' ; 
  type : name  < 'int' ; 
  name : "[a-zA-Z0-9]+" ; 
}

input '{int i1;int i2;}'

season 0
start  0:block -

season 1
width  0:'{' --> 0:block -

season 2
graft  0:block { '{' -

season 3
width  1:'int' --> 0:block{'{' -
width  1:empty --> 0:block{'{' -
width  1:"int" --> 0:block{'{' -

season 4
height 1:type{'int'} --> 0:block{'{' -
height 1:decls{empty} --> 0:block{'{' -
height 1:name{"int"} --> 0:block{'{' -

season 5
Swidth  4:"\s+" --> 1:type{'int'} --> 0:block{'{' -
graft   0:block{'{' decls{empty} -
Swidth  4:"\s+" --> 1:name{"int"} --> 0:block{'{' -

/* (3) from above should not be a 'new' growable,
   it should get linked into (1) as a possible parent,
   so we don't repeat work! */

season 6
height  4:WS{"\s+"} --> 1:type{'int'} --> 0:block{'{' -
drop    0:block{'{' decls{empty} -
height  4:WS{"\s+"} --> 1:name{"int"} --> 0:block{'{' -

season 7
Sgraft  1:type{'int' WS{"\s+"}} --> 0:block{'{' -
Sgraft  1:name{"int" WS{"\s+"}} --> 0:block{'{' -

season 8
height  1:decl{type{'int' WS{"\s+"}}} --> 0:block{'{' -
height  1:type{name{"int" WS{"\s+"}}} --> 0:block{'{' -

season 9
height  5:"i1" --> 1:decl{type{'int' WS{"\s+"}}} --> 0:block{'{' -
height  1:decl{type{name{"int" WS{"\s+"}}}} --> 0:block{'{' -

season 10
height  5:name{"i1"} --> 1:decl{type{'int' WS{"\s+"}}} --> 0:block{'{' -
height  5:"i1" --> 1:decl{type{name{"int" WS{"\s+"}}}} --> 0:block{'{' -

/* (2) from above should not be a 'new' growable,
   it should get linked into (1) as a possible parent,
   so we don't repeat work! */
