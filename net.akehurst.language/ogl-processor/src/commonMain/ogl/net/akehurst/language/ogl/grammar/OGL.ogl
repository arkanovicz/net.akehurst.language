/**
 * Copyright (C) 2015 Dr. David H. Akehurst (http://dr.david.h.akehurst.net)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *         http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
namespace net.akehurst.language.ogl.grammar

grammar OGL {

  skip WHITESPACE = "\s+" ;
  skip MULTI_LINE_COMMENT = "/\*[^*]*\*+(?:[^*/][^*]*\*+)*/" ;
  skip SINGLE_LINE_COMMENT = "//.*?$" ;

  grammarDefinition = namespace grammar ;
  namespace = 'namespace' qualifiedName ;
  grammar = 'grammar' IDENTIFIER extends? '{' rules '}' ;
  extends = 'extends' [qualifiedName / ',']+ ;
  rules = anyRule+ ;
  anyRule = normalRule | skipRule ;
  normalRule = IDENTIFIER '=' choice ';' ;
  skipRule = 'skip' IDENTIFIER '=' choice ';' ;
  choice = simpleChoice < priorityChoice ;
  simpleChoice = [concatenation / '|']* ;
  priorityChoice = [concatenation / '<']* ;
  concatenation = concatenationItem+ ;
  concatenationItem = simpleItem | multi | separatedList ;
  simpleItem = terminal | nonTerminal | group ;
  multiplicity : '*' | '+' | '?'
  multi = simpleItem multiplicity ;
  group = '(' choice ')' ;
  separatedList = '[' simpleItem '/' terminal ']' multiplicity ;
  nonTerminal = IDENTIFIER ;
  terminal = LITERAL | PATTERN ;
  qualifiedName = (IDENTIFIER / '::')+ ;
  IDENTIFIER = "[a-zA-Z_][a-zA-Z_0-9]*";
  LITERAL = "'(?:\\\\?.)*?'" ;
  PATTERN = "\"(?:\\\\?.)*?\"" ;
}